/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IndexerFlags {
    #[serde(rename = "freeleech")]
    Freeleech,
    #[serde(rename = "halfleech")]
    Halfleech,
    #[serde(rename = "doubleUpload")]
    DoubleUpload,
    #[serde(rename = "internal")]
    Internal,
    #[serde(rename = "scene")]
    Scene,
    #[serde(rename = "freeleech75")]
    Freeleech75,
    #[serde(rename = "freeleech25")]
    Freeleech25,

}

impl std::fmt::Display for IndexerFlags {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Freeleech => write!(f, "freeleech"),
            Self::Halfleech => write!(f, "halfleech"),
            Self::DoubleUpload => write!(f, "doubleUpload"),
            Self::Internal => write!(f, "internal"),
            Self::Scene => write!(f, "scene"),
            Self::Freeleech75 => write!(f, "freeleech75"),
            Self::Freeleech25 => write!(f, "freeleech25"),
        }
    }
}

impl Default for IndexerFlags {
    fn default() -> IndexerFlags {
        Self::Freeleech
    }
}

