/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TagDifference {
    #[serde(rename = "field", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub field: Option<Option<String>>,
    #[serde(rename = "oldValue", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub old_value: Option<Option<String>>,
    #[serde(rename = "newValue", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub new_value: Option<Option<String>>,
}

impl TagDifference {
    pub fn new() -> TagDifference {
        TagDifference {
            field: None,
            old_value: None,
            new_value: None,
        }
    }
}

