/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MonitorTypes {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "future")]
    Future,
    #[serde(rename = "missing")]
    Missing,
    #[serde(rename = "existing")]
    Existing,
    #[serde(rename = "latest")]
    Latest,
    #[serde(rename = "first")]
    First,
    #[serde(rename = "none")]
    None,
    #[serde(rename = "unknown")]
    Unknown,

}

impl std::fmt::Display for MonitorTypes {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::All => write!(f, "all"),
            Self::Future => write!(f, "future"),
            Self::Missing => write!(f, "missing"),
            Self::Existing => write!(f, "existing"),
            Self::Latest => write!(f, "latest"),
            Self::First => write!(f, "first"),
            Self::None => write!(f, "none"),
            Self::Unknown => write!(f, "unknown"),
        }
    }
}

impl Default for MonitorTypes {
    fn default() -> MonitorTypes {
        Self::All
    }
}

