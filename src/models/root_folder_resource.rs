/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RootFolderResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "path", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub path: Option<Option<String>>,
    #[serde(rename = "defaultMetadataProfileId", skip_serializing_if = "Option::is_none")]
    pub default_metadata_profile_id: Option<i32>,
    #[serde(rename = "defaultQualityProfileId", skip_serializing_if = "Option::is_none")]
    pub default_quality_profile_id: Option<i32>,
    #[serde(rename = "defaultMonitorOption", skip_serializing_if = "Option::is_none")]
    pub default_monitor_option: Option<models::MonitorTypes>,
    #[serde(rename = "defaultNewItemMonitorOption", skip_serializing_if = "Option::is_none")]
    pub default_new_item_monitor_option: Option<models::NewItemMonitorTypes>,
    #[serde(rename = "defaultTags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub default_tags: Option<Option<Vec<i32>>>,
    #[serde(rename = "isCalibreLibrary", skip_serializing_if = "Option::is_none")]
    pub is_calibre_library: Option<bool>,
    #[serde(rename = "host", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub host: Option<Option<String>>,
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    #[serde(rename = "urlBase", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub url_base: Option<Option<String>>,
    #[serde(rename = "username", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub username: Option<Option<String>>,
    #[serde(rename = "password", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub password: Option<Option<String>>,
    #[serde(rename = "library", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub library: Option<Option<String>>,
    #[serde(rename = "outputFormat", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub output_format: Option<Option<String>>,
    #[serde(rename = "outputProfile", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub output_profile: Option<Option<String>>,
    #[serde(rename = "useSsl", skip_serializing_if = "Option::is_none")]
    pub use_ssl: Option<bool>,
    #[serde(rename = "accessible", skip_serializing_if = "Option::is_none")]
    pub accessible: Option<bool>,
    #[serde(rename = "freeSpace", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub free_space: Option<Option<i64>>,
    #[serde(rename = "totalSpace", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_space: Option<Option<i64>>,
}

impl RootFolderResource {
    pub fn new() -> RootFolderResource {
        RootFolderResource {
            id: None,
            name: None,
            path: None,
            default_metadata_profile_id: None,
            default_quality_profile_id: None,
            default_monitor_option: None,
            default_new_item_monitor_option: None,
            default_tags: None,
            is_calibre_library: None,
            host: None,
            port: None,
            url_base: None,
            username: None,
            password: None,
            library: None,
            output_format: None,
            output_profile: None,
            use_ssl: None,
            accessible: None,
            free_space: None,
            total_space: None,
        }
    }
}

