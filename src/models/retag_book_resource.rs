/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RetagBookResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "authorId", skip_serializing_if = "Option::is_none")]
    pub author_id: Option<i32>,
    #[serde(rename = "bookId", skip_serializing_if = "Option::is_none")]
    pub book_id: Option<i32>,
    #[serde(rename = "trackNumbers", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub track_numbers: Option<Option<Vec<i32>>>,
    #[serde(rename = "bookFileId", skip_serializing_if = "Option::is_none")]
    pub book_file_id: Option<i32>,
    #[serde(rename = "path", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub path: Option<Option<String>>,
    #[serde(rename = "changes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub changes: Option<Option<Vec<models::TagDifference>>>,
}

impl RetagBookResource {
    pub fn new() -> RetagBookResource {
        RetagBookResource {
            id: None,
            author_id: None,
            book_id: None,
            track_numbers: None,
            book_file_id: None,
            path: None,
            changes: None,
        }
    }
}

