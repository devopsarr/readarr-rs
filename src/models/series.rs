/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Series {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "foreignSeriesId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub foreign_series_id: Option<Option<String>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "numbered", skip_serializing_if = "Option::is_none")]
    pub numbered: Option<bool>,
    #[serde(rename = "workCount", skip_serializing_if = "Option::is_none")]
    pub work_count: Option<i32>,
    #[serde(rename = "primaryWorkCount", skip_serializing_if = "Option::is_none")]
    pub primary_work_count: Option<i32>,
    #[serde(rename = "linkItems", skip_serializing_if = "Option::is_none")]
    pub link_items: Option<Box<models::SeriesBookLinkListLazyLoaded>>,
    #[serde(rename = "books", skip_serializing_if = "Option::is_none")]
    pub books: Option<Box<models::BookListLazyLoaded>>,
    #[serde(rename = "foreignAuthorId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub foreign_author_id: Option<Option<String>>,
}

impl Series {
    pub fn new() -> Series {
        Series {
            id: None,
            foreign_series_id: None,
            title: None,
            description: None,
            numbered: None,
            work_count: None,
            primary_work_count: None,
            link_items: None,
            books: None,
            foreign_author_id: None,
        }
    }
}

