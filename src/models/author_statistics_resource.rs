/*
 * Readarr
 *
 * Readarr API docs
 *
 * The version of the OpenAPI document: v0.4.10.2734
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthorStatisticsResource {
    #[serde(rename = "bookFileCount", skip_serializing_if = "Option::is_none")]
    pub book_file_count: Option<i32>,
    #[serde(rename = "bookCount", skip_serializing_if = "Option::is_none")]
    pub book_count: Option<i32>,
    #[serde(rename = "availableBookCount", skip_serializing_if = "Option::is_none")]
    pub available_book_count: Option<i32>,
    #[serde(rename = "totalBookCount", skip_serializing_if = "Option::is_none")]
    pub total_book_count: Option<i32>,
    #[serde(rename = "sizeOnDisk", skip_serializing_if = "Option::is_none")]
    pub size_on_disk: Option<i64>,
    #[serde(rename = "percentOfBooks", skip_serializing_if = "Option::is_none")]
    pub percent_of_books: Option<f64>,
}

impl AuthorStatisticsResource {
    pub fn new() -> AuthorStatisticsResource {
        AuthorStatisticsResource {
            book_file_count: None,
            book_count: None,
            available_book_count: None,
            total_book_count: None,
            size_on_disk: None,
            percent_of_books: None,
        }
    }
}

